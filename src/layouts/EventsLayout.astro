---
import type { EventData, Language, Locale } from "../bin/types";

import UpcomingEvents from "@components/UpcomingEvents.astro";
import EventLink from "@components/EventLink.astro";

import i18nData from "../data/i18n_data.json";

export interface Props {
  language: Language;
  events: EventData[];
  locale: Locale;
}

const { language, events, locale } = Astro.props;
---

<event-list>
  <UpcomingEvents language={language} events={events} locale={locale} />

  <section id="past-events" class="mt-6 opacity-0">
    <h2 class="text-2xl">{i18nData.events.past[language]}</h2>

    {events.map((event) => <EventLink eventData={event} locale={locale} />)}
  </section>
</event-list>

<script>
  class EventList extends HTMLElement {
    constructor() {
      super();

      const pastEvents: HTMLDivElement = this.querySelector("#past-events")!;
      const eventLinks: NodeListOf<HTMLAnchorElement> =
        pastEvents.querySelectorAll(".event-link");

      eventLinks.forEach((eventLink) => {
        const eventTime: number = parseInt(eventLink.dataset.time ?? "");
        const currentTime: number = new Date().getTime();

        if (eventTime < currentTime) return;

        eventLink.classList.add("hidden");
      });

      pastEvents.classList.remove("opacity-0");
    }
  }

  customElements.define("event-list", EventList);
</script>
