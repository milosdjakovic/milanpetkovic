---
import type { EventData, Locale } from "../bin/types";
import EventLink from "../components/EventLink.vue";

import UpcomingEvents from "../components/UpcomingEvents.vue";

export interface Props {
  upcomingEventsTitle: string;
  noEventsTitle: string;
  pastEventsTitle: string;
  events: EventData[];
  locale: Locale;
}

const { upcomingEventsTitle, noEventsTitle, pastEventsTitle, events, locale } =
  Astro.props;
---

<UpcomingEvents
  events={events}
  locale={locale}
  upcomingEventsTitle={upcomingEventsTitle}
  noEventsTitle={noEventsTitle}
  client:load
/>

<section id="past-events" class="mt-6 opacity-0">
  <h2 class="text-2xl">{pastEventsTitle}</h2>

  {events.map((event) => <EventLink eventData={event} locale={locale} />)}
</section>

<script>
  const pastEvents: HTMLDivElement = document.querySelector("#past-events")!;
  const eventLinks: NodeListOf<HTMLAnchorElement> =
    pastEvents.querySelectorAll(".event-link");

  eventLinks.forEach((eventLink) => {
    const eventTime: number = parseInt(eventLink.dataset.time ?? "");
    const currentTime: number = new Date().getTime();

    if (eventTime < currentTime) return;

    eventLink.classList.add("hidden");
  });

  pastEvents.classList.remove("opacity-0");
</script>
