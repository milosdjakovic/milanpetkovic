---
import type { Language } from "../bin/types";

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import darkLeather from "../assets/dark_leather.png";
import rhodesKeys from "../assets/rhodes_keys.svg";

export interface Props {
  title: string;
  page: string;
  language: Language;
}

const { title, page, language } = Astro.props;
---

<!DOCTYPE html>
<html lang={language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} - {page}</title>
  </head>
  <body class="text-gray-100">
    <main
      class="relative z-20 flex flex-col text-gray-100 shadow-lg"
      style={{
        backgroundImage: `url(${darkLeather.src})`,
        marginBottom: "calc(100vh - 13rem - 4rem)",
      }}
    >
      <Header title={title} language={language} />

      <page-content
        class="self-center w-full max-w-6xl min-h-screen px-6 pt-16 pb-12 md:pb-20 md:pt-24"
      >
        <slot />
      </page-content>

      <div class="flex bg-repeat-x h-52 pb-3">
        <div
          class="flex-grow"
          style={{ backgroundImage: `url(${rhodesKeys})` }}
        >
        </div>
      </div>
    </main>

    <Footer />
  </body>

  <script>
    import { initializeLanguage } from "../bin/language";
    import * as Turbo from "@hotwired/turbo";
    import { animate, spring } from "motion";

    class PageContent extends HTMLElement {
      constructor() {
        super();

        document.addEventListener("turbo:before-render", (event) => {
          event.preventDefault();

          window.scrollTo({
            top: 0,
            behavior: "smooth",
          });

          animate(this, { opacity: 0 }, { duration: 0.2, easing: spring() });

          setTimeout(() => event?.detail.resume(), 200);
        });

        document.addEventListener("turbo:load", (event) => {
          animate(this, { opacity: 1 }, { duration: 0.2, easing: spring() });
        });

        initializeLanguage();
      }
    }

    customElements.define("page-content", PageContent);
  </script>
</html>

<style is:global></style>
