---
import type { AlbumData, Language } from "../bin/types";
import { Image, Picture } from "@astrojs/image/components";

import kadNikoNeCeka from "@images/album_covers/optimized/kad_niko_ne_ceka.jpg";
import leptir from "@images/album_covers/optimized/leptir.jpg";
import uSrcu from "@images/album_covers/optimized/u_srcu.jpg";
import doKrajaSveta from "@images/album_covers/optimized/do_kraja_sveta.jpg";
import potvrdaOZivotu from "@images/album_covers/optimized/potvrda_o_zivotu.jpg";
import naObali from "@images/album_covers/optimized/na_obali.jpg";
import nada from "@images/album_covers/optimized/nada.jpg";
import utociste from "@images/album_covers/optimized/utociste.jpg";
import odraz from "@images/album_covers/optimized/odraz.jpg";
import muzickaKutija from "@images/album_covers/optimized/muzicka_kutija.jpg";

const albumCovers = {
  kad_niko_ne_ceka: kadNikoNeCeka,
  leptir: leptir,
  u_srcu: uSrcu,
  do_kraja_sveta: doKrajaSveta,
  potvrda_o_zivotu: potvrdaOZivotu,
  na_obali: naObali,
  nada: nada,
  utociste: utociste,
  odraz: odraz,
  muzicka_kutija: muzickaKutija,
} as const;

type AlbumCovers = keyof typeof albumCovers;

export interface Props {
  language: Language;
  discography: AlbumData[];
  onlyLatest?: boolean;
  albumContentCentered?: boolean;
}

const { language, discography, onlyLatest, albumContentCentered } = Astro.props;
---

<div class="flex justify-center flex-wrap gap-12 mt-8">
  {
    discography.map((album) => {
      const cover = album.cover as AlbumCovers;

      if (onlyLatest && !album?.latest) return;

      return (
        <div class="flex flex-col rounded-b-md transform lg:hover:scale-110 duration-200 ease-in-out group">
          <div class="relative">
            <Image
              src={albumCovers[cover]}
              alt={album[language].title}
              class="border-2 border-transparent"
              style={{ maxWidth: "20rem" }}
            />

            <ol
              class:list={[
                {
                  "text-center": albumContentCentered,
                  "inset-0": albumContentCentered,
                  "justify-center": albumContentCentered,
                },
                "hidden absolute bg-black/70 backdrop-blur-sm p-8 list-decimal inset-0 list-inside opacity-0 lg:flex lg:flex-col group-hover:opacity-100 ease-in-out transition-opacity duration-200 ",
              ]}
            >
              {album[language].songs.map((song) => (
                <li>{song}</li>
              ))}
            </ol>
          </div>

          <p
            class:list={[
              { "lg:text-center text-left": albumContentCentered },
              "mt-1 text-lg font-semibold",
            ]}
          >
            {album[language].title}
            <span class="-mt-1 text-sm text-gray-300">({album.year})</span>
          </p>

          <ol class="text-left mt-1 border-t-2 pt-1 lg:hidden block list-decimal inset-0 list-inside">
            {album[language].songs.map((song) => (
              <li>{song}</li>
            ))}
          </ol>
        </div>
      );
    })
  }
</div>
