---
import type { Language } from "../bin/types";
import LanguageSwitcher from "./LanguageSwitcher.astro";

import routeData from "../data/route_data.json";
import SidebarNavigation from "./SidebarNavigation.astro";

export interface Props {
  title: string;
  language: Language;
}

const { title, language } = Astro.props;

const url = new URL(Astro.request.url);
const pathname = url.pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<header
  class="fixed inset-x-0 top-0 z-30 flex justify-center h-12 md:h-16 border-b-2 border-transparent"
>
  <div class="flex justify-between w-full max-w-6xl px-6">
    <a
      href="/"
      class="px-4 -ml-4 flex items-center text-lg hover:bg-gray-100/10"
    >
      <strong>{title}</strong>
    </a>

    <nav class="hidden lg:flex">
      {
        routeData.routes.map((route, i) => {
          const formattedRoute: string = route ? `${route}/` : "";
          const path: string = `${language}/${formattedRoute}`;

          return (
            <a
              href={`/${path}`}
              class={currentPath === `${path}` ? "link link__active" : "link"}
            >
              <span>{routeData.links[language][i]}</span>
            </a>
          );
        })
      }
    </nav>

    <div class="flex gap-1">
      <LanguageSwitcher language={language} />
      <SidebarNavigation language={language} currentPath={currentPath} />
    </div>
  </div>
</header>

<script>
  import darkLeather from "../images/dark_leather.png";

  const header: HTMLElement = document.querySelector("header")!;
  let headerStylesUpdated: boolean = false;

  function handleScroll() {
    const onTop: boolean = window.scrollY === 0;

    if (onTop) {
      header.classList.remove("border-gray-800");
      header.classList.remove("shadow-2xl");
      header.style.backgroundImage = `none`;

      headerStylesUpdated = false;
    }

    if (!onTop && !headerStylesUpdated) {
      header.classList.add("border-gray-800");
      header.classList.add("shadow-2xl");
      header.style.backgroundImage = `url(${darkLeather.src})`;

      headerStylesUpdated = true;
    }
  }

  handleScroll();

  window.addEventListener("scroll", handleScroll);
</script>

<style>
  .link {
    @apply flex items-center px-4 text-gray-300 hover:text-gray-100 hover:bg-gray-100/10 hover:shadow-bottom-light;
  }

  .link__active {
    @apply text-fluo-green hover:shadow-bottom-fluo shadow-bottom-fluo hover:bg-fluo-green/10 hover:text-fluo-green;
  }
</style>
